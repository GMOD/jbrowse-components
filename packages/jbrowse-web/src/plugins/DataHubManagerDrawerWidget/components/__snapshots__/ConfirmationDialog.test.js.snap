// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ConfirmationDialog /> handles 404 1`] = `
<WithStyles(inject-ConfirmationDialog-with-rootModel)
  assemblyName="hg38"
  enableNext={[Function]}
  hubName="TestHub"
  rootModel={
    Object {
      "activeDrawerWidgets": Object {
        "hierarchicalTrackSelector": "hierarchicalTrackSelector",
      },
      "configuration": Object {
        "configId": "testing",
      },
      "drawerWidgets": Object {
        "hierarchicalTrackSelector": Object {
          "collapsed": Object {},
          "filterText": "",
          "id": "hierarchicalTrackSelector",
          "type": "HierarchicalTrackSelectorDrawerWidget",
          "view": "testViewId",
        },
      },
      "drawerWidth": 256,
      "menuBars": Array [],
      "views": Array [
        Object {
          "bpPerPx": 1,
          "configuration": Object {
            "configId": "testViewConfigId",
          },
          "controlsWidth": 120,
          "displayedRegions": Array [],
          "flipped": false,
          "id": "testViewId",
          "offsetPx": 0,
          "tracks": Array [],
          "type": "LinearGenomeView",
        },
      ],
      "width": 512,
    }
  }
  trackDbUrl={"http://test.com/trackDb.txt"}
>
  <inject-ConfirmationDialog-with-rootModel
    assemblyName="hg38"
    classes={
      Object {
        "unsupportedHeader": "inject-ConfirmationDialog-with-rootModel-unsupportedHeader-1",
      }
    }
    enableNext={[Function]}
    hubName="TestHub"
    rootModel={
      Object {
        "activeDrawerWidgets": Object {
          "hierarchicalTrackSelector": "hierarchicalTrackSelector",
        },
        "configuration": Object {
          "configId": "testing",
        },
        "drawerWidgets": Object {
          "hierarchicalTrackSelector": Object {
            "collapsed": Object {},
            "filterText": "",
            "id": "hierarchicalTrackSelector",
            "type": "HierarchicalTrackSelectorDrawerWidget",
            "view": "testViewId",
          },
        },
        "drawerWidth": 256,
        "menuBars": Array [],
        "views": Array [
          Object {
            "bpPerPx": 1,
            "configuration": Object {
              "configId": "testViewConfigId",
            },
            "controlsWidth": 120,
            "displayedRegions": Array [],
            "flipped": false,
            "id": "testViewId",
            "offsetPx": 0,
            "tracks": Array [],
            "type": "LinearGenomeView",
          },
        ],
        "width": 512,
      }
    }
    trackDbUrl={"http://test.com/trackDb.txt"}
  >
    <ConfirmationDialog
      assemblyName="hg38"
      classes={
        Object {
          "unsupportedHeader": "inject-ConfirmationDialog-with-rootModel-unsupportedHeader-1",
        }
      }
      enableNext={[Function]}
      hubName="TestHub"
      rootModel={
        Object {
          "activeDrawerWidgets": Object {
            "hierarchicalTrackSelector": "hierarchicalTrackSelector",
          },
          "configuration": Object {
            "configId": "testing",
          },
          "drawerWidgets": Object {
            "hierarchicalTrackSelector": Object {
              "collapsed": Object {},
              "filterText": "",
              "id": "hierarchicalTrackSelector",
              "type": "HierarchicalTrackSelectorDrawerWidget",
              "view": "testViewId",
            },
          },
          "drawerWidth": 256,
          "menuBars": Array [],
          "views": Array [
            Object {
              "bpPerPx": 1,
              "configuration": Object {
                "configId": "testViewConfigId",
              },
              "controlsWidth": 120,
              "displayedRegions": Array [],
              "flipped": false,
              "id": "testViewId",
              "offsetPx": 0,
              "tracks": Array [],
              "type": "LinearGenomeView",
            },
          ],
          "width": 512,
        }
      }
      trackDbUrl={"http://test.com/trackDb.txt"}
    >
      <WithStyles(LinearProgress)
        variant="query"
      >
        <LinearProgress
          classes={
            Object {
              "bar": "MuiLinearProgress-bar-207",
              "bar1Buffer": "MuiLinearProgress-bar1Buffer-212",
              "bar1Determinate": "MuiLinearProgress-bar1Determinate-211",
              "bar1Indeterminate": "MuiLinearProgress-bar1Indeterminate-210",
              "bar2Buffer": "MuiLinearProgress-bar2Buffer-214",
              "bar2Indeterminate": "MuiLinearProgress-bar2Indeterminate-213",
              "barColorPrimary": "MuiLinearProgress-barColorPrimary-208",
              "barColorSecondary": "MuiLinearProgress-barColorSecondary-209",
              "buffer": "MuiLinearProgress-buffer-202",
              "colorPrimary": "MuiLinearProgress-colorPrimary-198",
              "colorSecondary": "MuiLinearProgress-colorSecondary-199",
              "dashed": "MuiLinearProgress-dashed-204",
              "dashedColorPrimary": "MuiLinearProgress-dashedColorPrimary-205",
              "dashedColorSecondary": "MuiLinearProgress-dashedColorSecondary-206",
              "determinate": "MuiLinearProgress-determinate-200",
              "indeterminate": "MuiLinearProgress-indeterminate-201",
              "query": "MuiLinearProgress-query-203",
              "root": "MuiLinearProgress-root-197",
            }
          }
          color="primary"
          variant="query"
        >
          <div
            className="MuiLinearProgress-root-197 MuiLinearProgress-colorPrimary-198 MuiLinearProgress-query-203"
            role="progressbar"
          >
            <div
              className="MuiLinearProgress-bar-207 MuiLinearProgress-barColorPrimary-208 MuiLinearProgress-bar1Indeterminate-210"
              style={Object {}}
            />
            <div
              className="MuiLinearProgress-bar-207 MuiLinearProgress-barColorPrimary-208 MuiLinearProgress-bar2Indeterminate-213"
              style={Object {}}
            />
          </div>
        </LinearProgress>
      </WithStyles(LinearProgress)>
    </ConfirmationDialog>
  </inject-ConfirmationDialog-with-rootModel>
</WithStyles(inject-ConfirmationDialog-with-rootModel)>
`;

exports[`<ConfirmationDialog /> handles fetch error 1`] = `
<WithStyles(inject-ConfirmationDialog-with-rootModel)
  assemblyName="hg38"
  enableNext={[Function]}
  hubName="TestHub"
  rootModel={
    Object {
      "activeDrawerWidgets": Object {
        "hierarchicalTrackSelector": "hierarchicalTrackSelector",
      },
      "configuration": Object {
        "configId": "testing",
      },
      "drawerWidgets": Object {
        "hierarchicalTrackSelector": Object {
          "collapsed": Object {},
          "filterText": "",
          "id": "hierarchicalTrackSelector",
          "type": "HierarchicalTrackSelectorDrawerWidget",
          "view": "testViewId",
        },
      },
      "drawerWidth": 256,
      "menuBars": Array [],
      "views": Array [
        Object {
          "bpPerPx": 1,
          "configuration": Object {
            "configId": "testViewConfigId",
          },
          "controlsWidth": 120,
          "displayedRegions": Array [],
          "flipped": false,
          "id": "testViewId",
          "offsetPx": 0,
          "tracks": Array [],
          "type": "LinearGenomeView",
        },
      ],
      "width": 512,
    }
  }
  trackDbUrl={"http://test.com/trackDb.txt"}
>
  <inject-ConfirmationDialog-with-rootModel
    assemblyName="hg38"
    classes={
      Object {
        "unsupportedHeader": "inject-ConfirmationDialog-with-rootModel-unsupportedHeader-1",
      }
    }
    enableNext={[Function]}
    hubName="TestHub"
    rootModel={
      Object {
        "activeDrawerWidgets": Object {
          "hierarchicalTrackSelector": "hierarchicalTrackSelector",
        },
        "configuration": Object {
          "configId": "testing",
        },
        "drawerWidgets": Object {
          "hierarchicalTrackSelector": Object {
            "collapsed": Object {},
            "filterText": "",
            "id": "hierarchicalTrackSelector",
            "type": "HierarchicalTrackSelectorDrawerWidget",
            "view": "testViewId",
          },
        },
        "drawerWidth": 256,
        "menuBars": Array [],
        "views": Array [
          Object {
            "bpPerPx": 1,
            "configuration": Object {
              "configId": "testViewConfigId",
            },
            "controlsWidth": 120,
            "displayedRegions": Array [],
            "flipped": false,
            "id": "testViewId",
            "offsetPx": 0,
            "tracks": Array [],
            "type": "LinearGenomeView",
          },
        ],
        "width": 512,
      }
    }
    trackDbUrl={"http://test.com/trackDb.txt"}
  >
    <ConfirmationDialog
      assemblyName="hg38"
      classes={
        Object {
          "unsupportedHeader": "inject-ConfirmationDialog-with-rootModel-unsupportedHeader-1",
        }
      }
      enableNext={[Function]}
      hubName="TestHub"
      rootModel={
        Object {
          "activeDrawerWidgets": Object {
            "hierarchicalTrackSelector": "hierarchicalTrackSelector",
          },
          "configuration": Object {
            "configId": "testing",
          },
          "drawerWidgets": Object {
            "hierarchicalTrackSelector": Object {
              "collapsed": Object {},
              "filterText": "",
              "id": "hierarchicalTrackSelector",
              "type": "HierarchicalTrackSelectorDrawerWidget",
              "view": "testViewId",
            },
          },
          "drawerWidth": 256,
          "menuBars": Array [],
          "views": Array [
            Object {
              "bpPerPx": 1,
              "configuration": Object {
                "configId": "testViewConfigId",
              },
              "controlsWidth": 120,
              "displayedRegions": Array [],
              "flipped": false,
              "id": "testViewId",
              "offsetPx": 0,
              "tracks": Array [],
              "type": "LinearGenomeView",
            },
          ],
          "width": 512,
        }
      }
      trackDbUrl={"http://test.com/trackDb.txt"}
    >
      <WithStyles(Typography)
        color="error"
      >
        <Typography
          align="inherit"
          classes={
            Object {
              "alignCenter": "MuiTypography-alignCenter-291",
              "alignJustify": "MuiTypography-alignJustify-293",
              "alignLeft": "MuiTypography-alignLeft-290",
              "alignRight": "MuiTypography-alignRight-292",
              "body1": "MuiTypography-body1-277",
              "body2": "MuiTypography-body2-276",
              "button": "MuiTypography-button-279",
              "caption": "MuiTypography-caption-278",
              "colorError": "MuiTypography-colorError-302",
              "colorInherit": "MuiTypography-colorInherit-297",
              "colorPrimary": "MuiTypography-colorPrimary-298",
              "colorSecondary": "MuiTypography-colorSecondary-299",
              "colorTextPrimary": "MuiTypography-colorTextPrimary-300",
              "colorTextSecondary": "MuiTypography-colorTextSecondary-301",
              "display1": "MuiTypography-display1-272",
              "display2": "MuiTypography-display2-271",
              "display3": "MuiTypography-display3-270",
              "display4": "MuiTypography-display4-269",
              "gutterBottom": "MuiTypography-gutterBottom-295",
              "h1": "MuiTypography-h1-280",
              "h2": "MuiTypography-h2-281",
              "h3": "MuiTypography-h3-282",
              "h4": "MuiTypography-h4-283",
              "h5": "MuiTypography-h5-284",
              "h6": "MuiTypography-h6-285",
              "headline": "MuiTypography-headline-273",
              "noWrap": "MuiTypography-noWrap-294",
              "overline": "MuiTypography-overline-288",
              "paragraph": "MuiTypography-paragraph-296",
              "root": "MuiTypography-root-268",
              "srOnly": "MuiTypography-srOnly-289",
              "subheading": "MuiTypography-subheading-275",
              "subtitle1": "MuiTypography-subtitle1-286",
              "subtitle2": "MuiTypography-subtitle2-287",
              "title": "MuiTypography-title-274",
            }
          }
          color="error"
          gutterBottom={false}
          headlineMapping={
            Object {
              "body1": "p",
              "body2": "p",
              "display1": "h1",
              "display2": "h1",
              "display3": "h1",
              "display4": "h1",
              "h1": "h1",
              "h2": "h2",
              "h3": "h3",
              "h4": "h4",
              "h5": "h5",
              "h6": "h6",
              "headline": "h1",
              "subheading": "h3",
              "subtitle1": "h6",
              "subtitle2": "h6",
              "title": "h2",
            }
          }
          noWrap={false}
          paragraph={false}
          theme={
            Object {
              "breakpoints": Object {
                "between": [Function],
                "down": [Function],
                "keys": Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ],
                "only": [Function],
                "up": [Function],
                "values": Object {
                  "lg": 1280,
                  "md": 960,
                  "sm": 600,
                  "xl": 1920,
                  "xs": 0,
                },
                "width": [Function],
              },
              "direction": "ltr",
              "mixins": Object {
                "gutters": [Function],
                "toolbar": Object {
                  "@media (min-width:0px) and (orientation: landscape)": Object {
                    "minHeight": 48,
                  },
                  "@media (min-width:600px)": Object {
                    "minHeight": 64,
                  },
                  "minHeight": 56,
                },
              },
              "overrides": Object {},
              "palette": Object {
                "action": Object {
                  "active": "rgba(0, 0, 0, 0.54)",
                  "disabled": "rgba(0, 0, 0, 0.26)",
                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                  "hover": "rgba(0, 0, 0, 0.08)",
                  "hoverOpacity": 0.08,
                  "selected": "rgba(0, 0, 0, 0.14)",
                },
                "augmentColor": [Function],
                "background": Object {
                  "default": "#fafafa",
                  "paper": "#fff",
                },
                "common": Object {
                  "black": "#000",
                  "white": "#fff",
                },
                "contrastThreshold": 3,
                "divider": "rgba(0, 0, 0, 0.12)",
                "error": Object {
                  "contrastText": "#fff",
                  "dark": "#d32f2f",
                  "light": "#e57373",
                  "main": "#f44336",
                },
                "getContrastText": [Function],
                "grey": Object {
                  "100": "#f5f5f5",
                  "200": "#eeeeee",
                  "300": "#e0e0e0",
                  "400": "#bdbdbd",
                  "50": "#fafafa",
                  "500": "#9e9e9e",
                  "600": "#757575",
                  "700": "#616161",
                  "800": "#424242",
                  "900": "#212121",
                  "A100": "#d5d5d5",
                  "A200": "#aaaaaa",
                  "A400": "#303030",
                  "A700": "#616161",
                },
                "primary": Object {
                  "contrastText": "#fff",
                  "dark": "#303f9f",
                  "light": "#7986cb",
                  "main": "#3f51b5",
                },
                "secondary": Object {
                  "contrastText": "#fff",
                  "dark": "#c51162",
                  "light": "#ff4081",
                  "main": "#f50057",
                },
                "text": Object {
                  "disabled": "rgba(0, 0, 0, 0.38)",
                  "hint": "rgba(0, 0, 0, 0.38)",
                  "primary": "rgba(0, 0, 0, 0.87)",
                  "secondary": "rgba(0, 0, 0, 0.54)",
                },
                "tonalOffset": 0.2,
                "type": "light",
              },
              "props": Object {},
              "shadows": Array [
                "none",
                "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
              ],
              "shape": Object {
                "borderRadius": 4,
              },
              "spacing": Object {
                "unit": 8,
              },
              "transitions": Object {
                "create": [Function],
                "duration": Object {
                  "complex": 375,
                  "enteringScreen": 225,
                  "leavingScreen": 195,
                  "short": 250,
                  "shorter": 200,
                  "shortest": 150,
                  "standard": 300,
                },
                "easing": Object {
                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                },
                "getAutoHeightDuration": [Function],
              },
              "typography": Object {
                "body1": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 400,
                  "lineHeight": "1.46429em",
                },
                "body1Next": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.00938em",
                  "lineHeight": 1.5,
                },
                "body2": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 500,
                  "lineHeight": "1.71429em",
                },
                "body2Next": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.01071em",
                  "lineHeight": 1.5,
                },
                "button": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 500,
                  "textTransform": "uppercase",
                },
                "buttonNext": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 500,
                  "letterSpacing": "0.02857em",
                  "lineHeight": 1.5,
                  "textTransform": "uppercase",
                },
                "caption": Object {
                  "color": "rgba(0, 0, 0, 0.54)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.75rem",
                  "fontWeight": 400,
                  "lineHeight": "1.375em",
                },
                "captionNext": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.75rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.03333em",
                  "lineHeight": 1.66,
                },
                "display1": Object {
                  "color": "rgba(0, 0, 0, 0.54)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "2.125rem",
                  "fontWeight": 400,
                  "lineHeight": "1.20588em",
                },
                "display2": Object {
                  "color": "rgba(0, 0, 0, 0.54)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "2.8125rem",
                  "fontWeight": 400,
                  "lineHeight": "1.13333em",
                  "marginLeft": "-.02em",
                },
                "display3": Object {
                  "color": "rgba(0, 0, 0, 0.54)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "3.5rem",
                  "fontWeight": 400,
                  "letterSpacing": "-.02em",
                  "lineHeight": "1.30357em",
                  "marginLeft": "-.02em",
                },
                "display4": Object {
                  "color": "rgba(0, 0, 0, 0.54)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "7rem",
                  "fontWeight": 300,
                  "letterSpacing": "-.04em",
                  "lineHeight": "1.14286em",
                  "marginLeft": "-.04em",
                },
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": 14,
                "fontWeightLight": 300,
                "fontWeightMedium": 500,
                "fontWeightRegular": 400,
                "h1": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "6rem",
                  "fontWeight": 300,
                  "letterSpacing": "-0.01562em",
                  "lineHeight": 1,
                },
                "h2": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "3.75rem",
                  "fontWeight": 300,
                  "letterSpacing": "-0.00833em",
                  "lineHeight": 1,
                },
                "h3": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "3rem",
                  "fontWeight": 400,
                  "letterSpacing": "0em",
                  "lineHeight": 1.04,
                },
                "h4": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "2.125rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.00735em",
                  "lineHeight": 1.17,
                },
                "h5": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1.5rem",
                  "fontWeight": 400,
                  "letterSpacing": "0em",
                  "lineHeight": 1.33,
                },
                "h6": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1.25rem",
                  "fontWeight": 500,
                  "letterSpacing": "0.0075em",
                  "lineHeight": 1.6,
                },
                "headline": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1.5rem",
                  "fontWeight": 400,
                  "lineHeight": "1.35417em",
                },
                "overline": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.75rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.08333em",
                  "lineHeight": 2.66,
                  "textTransform": "uppercase",
                },
                "pxToRem": [Function],
                "round": [Function],
                "subheading": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1rem",
                  "fontWeight": 400,
                  "lineHeight": "1.5em",
                },
                "subtitle1": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.00938em",
                  "lineHeight": 1.75,
                },
                "subtitle2": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 500,
                  "letterSpacing": "0.00714em",
                  "lineHeight": 1.57,
                },
                "title": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1.3125rem",
                  "fontWeight": 500,
                  "lineHeight": "1.16667em",
                },
                "useNextVariants": false,
              },
              "zIndex": Object {
                "appBar": 1100,
                "drawer": 1200,
                "mobileStepper": 1000,
                "modal": 1300,
                "snackbar": 1400,
                "tooltip": 1500,
              },
            }
          }
        >
          <p
            className="MuiTypography-root-268 MuiTypography-body1-277 MuiTypography-colorError-302"
          >
            <span>
              <strong>
                Network error.
              </strong>
               
               
              <br />
              http://test.com/trackDb.txt
            </span>
          </p>
        </Typography>
      </WithStyles(Typography)>
    </ConfirmationDialog>
  </inject-ConfirmationDialog-with-rootModel>
</WithStyles(inject-ConfirmationDialog-with-rootModel)>
`;

exports[`<ConfirmationDialog /> mounts 1`] = `
<WithStyles(inject-ConfirmationDialog-with-rootModel)
  assemblyName="hg38"
  enableNext={[Function]}
  hubName="TestHub"
  rootModel={
    Object {
      "activeDrawerWidgets": Object {
        "hierarchicalTrackSelector": "hierarchicalTrackSelector",
      },
      "configuration": Object {
        "configId": "testing",
      },
      "drawerWidgets": Object {
        "hierarchicalTrackSelector": Object {
          "collapsed": Object {},
          "filterText": "",
          "id": "hierarchicalTrackSelector",
          "type": "HierarchicalTrackSelectorDrawerWidget",
          "view": "testViewId",
        },
      },
      "drawerWidth": 256,
      "menuBars": Array [],
      "views": Array [
        Object {
          "bpPerPx": 1,
          "configuration": Object {
            "configId": "testViewConfigId",
          },
          "controlsWidth": 120,
          "displayedRegions": Array [],
          "flipped": false,
          "id": "testViewId",
          "offsetPx": 0,
          "tracks": Array [],
          "type": "LinearGenomeView",
        },
      ],
      "width": 512,
    }
  }
  trackDbUrl={"http://test.com/hg19/trackDb.txt"}
>
  <inject-ConfirmationDialog-with-rootModel
    assemblyName="hg38"
    classes={
      Object {
        "unsupportedHeader": "inject-ConfirmationDialog-with-rootModel-unsupportedHeader-1",
      }
    }
    enableNext={[Function]}
    hubName="TestHub"
    rootModel={
      Object {
        "activeDrawerWidgets": Object {
          "hierarchicalTrackSelector": "hierarchicalTrackSelector",
        },
        "configuration": Object {
          "configId": "testing",
        },
        "drawerWidgets": Object {
          "hierarchicalTrackSelector": Object {
            "collapsed": Object {},
            "filterText": "",
            "id": "hierarchicalTrackSelector",
            "type": "HierarchicalTrackSelectorDrawerWidget",
            "view": "testViewId",
          },
        },
        "drawerWidth": 256,
        "menuBars": Array [],
        "views": Array [
          Object {
            "bpPerPx": 1,
            "configuration": Object {
              "configId": "testViewConfigId",
            },
            "controlsWidth": 120,
            "displayedRegions": Array [],
            "flipped": false,
            "id": "testViewId",
            "offsetPx": 0,
            "tracks": Array [],
            "type": "LinearGenomeView",
          },
        ],
        "width": 512,
      }
    }
    trackDbUrl={"http://test.com/hg19/trackDb.txt"}
  >
    <ConfirmationDialog
      assemblyName="hg38"
      classes={
        Object {
          "unsupportedHeader": "inject-ConfirmationDialog-with-rootModel-unsupportedHeader-1",
        }
      }
      enableNext={[Function]}
      hubName="TestHub"
      rootModel={
        Object {
          "activeDrawerWidgets": Object {
            "hierarchicalTrackSelector": "hierarchicalTrackSelector",
          },
          "configuration": Object {
            "configId": "testing",
          },
          "drawerWidgets": Object {
            "hierarchicalTrackSelector": Object {
              "collapsed": Object {},
              "filterText": "",
              "id": "hierarchicalTrackSelector",
              "type": "HierarchicalTrackSelectorDrawerWidget",
              "view": "testViewId",
            },
          },
          "drawerWidth": 256,
          "menuBars": Array [],
          "views": Array [
            Object {
              "bpPerPx": 1,
              "configuration": Object {
                "configId": "testViewConfigId",
              },
              "controlsWidth": 120,
              "displayedRegions": Array [],
              "flipped": false,
              "id": "testViewId",
              "offsetPx": 0,
              "tracks": Array [],
              "type": "LinearGenomeView",
            },
          ],
          "width": 512,
        }
      }
      trackDbUrl={"http://test.com/hg19/trackDb.txt"}
    >
      <WithStyles(LinearProgress)
        variant="query"
      >
        <LinearProgress
          classes={
            Object {
              "bar": "MuiLinearProgress-bar-12",
              "bar1Buffer": "MuiLinearProgress-bar1Buffer-17",
              "bar1Determinate": "MuiLinearProgress-bar1Determinate-16",
              "bar1Indeterminate": "MuiLinearProgress-bar1Indeterminate-15",
              "bar2Buffer": "MuiLinearProgress-bar2Buffer-19",
              "bar2Indeterminate": "MuiLinearProgress-bar2Indeterminate-18",
              "barColorPrimary": "MuiLinearProgress-barColorPrimary-13",
              "barColorSecondary": "MuiLinearProgress-barColorSecondary-14",
              "buffer": "MuiLinearProgress-buffer-7",
              "colorPrimary": "MuiLinearProgress-colorPrimary-3",
              "colorSecondary": "MuiLinearProgress-colorSecondary-4",
              "dashed": "MuiLinearProgress-dashed-9",
              "dashedColorPrimary": "MuiLinearProgress-dashedColorPrimary-10",
              "dashedColorSecondary": "MuiLinearProgress-dashedColorSecondary-11",
              "determinate": "MuiLinearProgress-determinate-5",
              "indeterminate": "MuiLinearProgress-indeterminate-6",
              "query": "MuiLinearProgress-query-8",
              "root": "MuiLinearProgress-root-2",
            }
          }
          color="primary"
          variant="query"
        >
          <div
            className="MuiLinearProgress-root-2 MuiLinearProgress-colorPrimary-3 MuiLinearProgress-query-8"
            role="progressbar"
          >
            <div
              className="MuiLinearProgress-bar-12 MuiLinearProgress-barColorPrimary-13 MuiLinearProgress-bar1Indeterminate-15"
              style={Object {}}
            />
            <div
              className="MuiLinearProgress-bar-12 MuiLinearProgress-barColorPrimary-13 MuiLinearProgress-bar2Indeterminate-18"
              style={Object {}}
            />
          </div>
        </LinearProgress>
      </WithStyles(LinearProgress)>
    </ConfirmationDialog>
  </inject-ConfirmationDialog-with-rootModel>
</WithStyles(inject-ConfirmationDialog-with-rootModel)>
`;

exports[`<ConfirmationDialog /> shallowly renders 1`] = `
<WithStyles(LinearProgress)
  variant="query"
/>
`;
